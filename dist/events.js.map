{"version":3,"sources":["webpack:///events.js","webpack:///webpack/bootstrap 4086fb8da0cb079d25cc","webpack:///./source/Events.js","webpack:///./node_modules/jshashtable/jshashtable.js"],"names":["Events","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","is_array","pVar","toString","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_jshashtable","_jshashtable2","obj","default","this","gateway","Hashtable","hashes","once","defaultPriority","value","pLabel","pFunction","_this","priority","arguments","each","aLabel","concat","register","singleHash","Math","random","substring","undefined","put","typeHash","push","pHash","priorityHash","priorityKeys","keys","I","priorityArray","Y","splice","remove","pMessage","sort","a","b","skipType","hashValue","returnValue","aNewMessage","indexOf","unregister","eventObject","eventLabel","priorityObject","priority_hashes","console","log","hashObject","hashCode","FUNCTION","String","ex","equals_fixedValueHasEquals","fixedValue","variableValue","equals","equals_fixedValueNoEquals","createKeyValCheck","kvStr","kv","Error","Bucket","hash","firstKey","firstValue","equalityFunction","entries","addEntry","getEqualityFunction","createBucketSearcher","mode","entry","EXISTENCE","ENTRY","ENTRY_INDEX_AND_VALUE","createBucketLister","entryProperty","aggregatedArr","startIndex","len","searchBuckets","buckets","bucket","getBucketForHash","bucketsByHash","hashingFunctionParam","equalityFunctionParam","that","hashingFunction","checkKey","checkValue","bucketEntry","oldValue","getEntryForKey","containsKey","bucketKey","containsValue","clear","isEmpty","createBucketAggregator","bucketFuncName","aggregated","values","bucketIndex","removeEntryForKey","arrayRemoveAt","size","total","callback","putAll","hashtable","conflictCallback","thisValue","hasConflictCallback","clone","Array","arr","idx","itemsAfterDeleted","slice","searchValue","getEntryAndIndexForKey","result","getEntries"],"mappings":"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","file":"events.js","sourcesContent":["var Events =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jshashtable = __webpack_require__(1);\n\nvar _jshashtable2 = _interopRequireDefault(_jshashtable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction is_array(pVar) {\n    return Object.prototype.toString.call(pVar) == \"[object Array]\";\n}\n\nvar Events = function () {\n    function Events() {\n        _classCallCheck(this, Events);\n\n        this.gateway = new _jshashtable2.default();\n        this.hashes = new _jshashtable2.default();\n        this.once = [];\n\n        this.defaultPriority = 0;\n    }\n\n    /**\n     * Register for a specific Event. A third optional param can be send that represents the priority.\n     *\n     * @param pLabel string\n     * @param pFunction function\n     */\n\n\n    _createClass(Events, [{\n        key: 'register',\n        value: function register(pLabel, pFunction) {\n            var _this = this;\n\n            //priority\n            var priority = this.defaultPriority;\n\n            if (arguments.length > 2) {\n                priority = arguments[2];\n            }\n\n            if (is_array(pLabel)) {\n\n                var hashes = [];\n\n                pLabel.each(function (aLabel) {\n                    hashes = hashes.concat(_this.register(aLabel, pFunction, priority));\n                });\n\n                return hashes;\n            } else {\n\n                //init givent type\n                var singleHash = (Math.random() + 1).toString(36).substring(7);\n\n                if (this.gateway.get(pLabel) == undefined) {\n                    this.gateway.put(pLabel, new _jshashtable2.default());\n                }\n\n                var typeHash = this.gateway.get(pLabel);\n\n                //check priority\n                if (typeHash.get(priority) == undefined) {\n                    typeHash.put(priority, []);\n                }\n\n                var priorityArray = typeHash.get(priority);\n                priorityArray.push(singleHash);\n                this.hashes.put(singleHash, pFunction);\n\n                return singleHash;\n            }\n        }\n\n        /**\n         * Like register, but will be removed after a single execution\n         * \n         * @param pLabel\n         * @param pFunction\n         */\n\n    }, {\n        key: 'register_once',\n        value: function register_once(pLabel, pFunction) {\n\n            this.once.push(this.register(pLabel, pFunction, arguments[2] || this.defaultPriority));\n        }\n\n        /**\n         * Remove callback from event list\n         * \n         * @param pLabel\n         * @param pHash\n         * @returns {boolean}\n         */\n\n    }, {\n        key: 'unregister',\n        value: function unregister(pLabel, pHash) {\n\n            if (this.gateway.get(pLabel) != undefined) {\n\n                var priorityHash = this.gateway.get(pLabel);\n                var priorityKeys = priorityHash.keys();\n\n                for (var I = 0; I < priorityKeys.length; I++) {\n\n                    var priorityArray = priorityHash.get(priorityKeys[I]);\n\n                    for (var Y = 0; Y < priorityArray.length; Y++) {\n\n                        if (priorityArray[Y] == pHash) {\n\n                            priorityArray.splice(Y, 1);\n\n                            this.hashes.remove(pHash);\n\n                            return true;\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * Fire an event. The gateway searches for listeners and processes the callback with the payload\n         *\n         * @param pLabel string\n         * @param pMessage object\n         */\n\n    }, {\n        key: 'fire',\n        value: function fire(pLabel) {\n            var pMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n            if (this.gateway.get(pLabel) != undefined) {\n\n                var priorityHash = this.gateway.get(pLabel);\n                var priorityKeys = priorityHash.keys();\n\n                priorityKeys.sort(function (a, b) {\n                    return b - a;\n                });\n\n                var skipType = false;\n\n                for (var I = 0; I < priorityKeys.length; I++) {\n\n                    var priorityArray = priorityHash.get(priorityKeys[I]);\n\n                    for (var Y = 0; Y < priorityArray.length; Y++) {\n\n                        var hashValue = priorityArray[Y];\n                        var returnValue = this.hashes.get(hashValue)(pMessage, function (aNewMessage) {\n                            pMessage = aNewMessage;\n                        });\n\n                        if (this.once.indexOf(hashValue) > -1) {\n                            this.unregister(pLabel, hashValue);\n                        }\n\n                        // if return value is negative, we stop here!\n                        if (!returnValue) {\n                            false && console.log('Return value break (return not true) for event (' + pLabel + ')');\n                            skipType = true;\n                            break;\n                        }\n                    }\n\n                    if (skipType) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Return array of registered events\n         */\n\n    }, {\n        key: 'showEvents',\n        value: function showEvents() {\n\n            this.gateway.each(function (eventObject) {\n\n                var eventLabel = eventObject.key;\n                var priorityList = eventObject.value;\n\n                priorityList.each(function (priorityObject) {\n\n                    var priorityKey = priorityObject.key;\n                    var priority_hashes = priorityObject.value;\n\n                    if (priority_hashes.length > 0) {\n\n                        console.log(eventLabel + '(' + priority_hashes.length + ')');\n\n                        priority_hashes.each(function (hashObject) {\n                            console.log('#' + hashObject);\n                        });\n\n                        console.log('');\n                    }\n                });\n            });\n        }\n    }]);\n\n    return Events;\n}();\n\nmodule.exports = new Events();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\r\n * Copyright 2010 Tim Down.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * jshashtable\r\n *\r\n * jshashtable is a JavaScript implementation of a hash table. It creates a single constructor function called Hashtable\r\n * in the global scope.\r\n *\r\n * Author: Tim Down <tim@timdown.co.uk>\r\n * Version: 2.1\r\n * Build date: 21 March 2010\r\n * Website: http://www.timdown.co.uk/jshashtable\r\n */\r\n\r\nvar Hashtable = (function() {\r\n\tvar FUNCTION = \"function\";\r\n\r\n\tvar arrayRemoveAt = (typeof Array.prototype.splice == FUNCTION) ?\r\n\t\tfunction(arr, idx) {\r\n\t\t\tarr.splice(idx, 1);\r\n\t\t} :\r\n\r\n\t\tfunction(arr, idx) {\r\n\t\t\tvar itemsAfterDeleted, i, len;\r\n\t\t\tif (idx === arr.length - 1) {\r\n\t\t\t\tarr.length = idx;\r\n\t\t\t} else {\r\n\t\t\t\titemsAfterDeleted = arr.slice(idx + 1);\r\n\t\t\t\tarr.length = idx;\r\n\t\t\t\tfor (i = 0, len = itemsAfterDeleted.length; i < len; ++i) {\r\n\t\t\t\t\tarr[idx + i] = itemsAfterDeleted[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\tfunction hashObject(obj) {\r\n\t\tvar hashCode;\r\n\t\tif (typeof obj == \"string\") {\r\n\t\t\treturn obj;\r\n\t\t} else if (typeof obj.hashCode == FUNCTION) {\r\n\t\t\t// Check the hashCode method really has returned a string\r\n\t\t\thashCode = obj.hashCode();\r\n\t\t\treturn (typeof hashCode == \"string\") ? hashCode : hashObject(hashCode);\r\n\t\t} else if (typeof obj.toString == FUNCTION) {\r\n\t\t\treturn obj.toString();\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\treturn String(obj);\r\n\t\t\t} catch (ex) {\r\n\t\t\t\t// For host objects (such as ActiveObjects in IE) that have no toString() method and throw an error when\r\n\t\t\t\t// passed to String()\r\n\t\t\t\treturn Object.prototype.toString.call(obj);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction equals_fixedValueHasEquals(fixedValue, variableValue) {\r\n\t\treturn fixedValue.equals(variableValue);\r\n\t}\r\n\r\n\tfunction equals_fixedValueNoEquals(fixedValue, variableValue) {\r\n\t\treturn (typeof variableValue.equals == FUNCTION) ?\r\n\t\t\t   variableValue.equals(fixedValue) : (fixedValue === variableValue);\r\n\t}\r\n\r\n\tfunction createKeyValCheck(kvStr) {\r\n\t\treturn function(kv) {\r\n\t\t\tif (kv === null) {\r\n\t\t\t\tthrow new Error(\"null is not a valid \" + kvStr);\r\n\t\t\t} else if (typeof kv == \"undefined\") {\r\n\t\t\t\tthrow new Error(kvStr + \" must not be undefined\");\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tvar checkKey = createKeyValCheck(\"key\"), checkValue = createKeyValCheck(\"value\");\r\n\r\n\t/*----------------------------------------------------------------------------------------------------------------*/\r\n\r\n\tfunction Bucket(hash, firstKey, firstValue, equalityFunction) {\r\n        this[0] = hash;\r\n\t\tthis.entries = [];\r\n\t\tthis.addEntry(firstKey, firstValue);\r\n\r\n\t\tif (equalityFunction !== null) {\r\n\t\t\tthis.getEqualityFunction = function() {\r\n\t\t\t\treturn equalityFunction;\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tvar EXISTENCE = 0, ENTRY = 1, ENTRY_INDEX_AND_VALUE = 2;\r\n\r\n\tfunction createBucketSearcher(mode) {\r\n\t\treturn function(key) {\r\n\t\t\tvar i = this.entries.length, entry, equals = this.getEqualityFunction(key);\r\n\t\t\twhile (i--) {\r\n\t\t\t\tentry = this.entries[i];\r\n\t\t\t\tif ( equals(key, entry[0]) ) {\r\n\t\t\t\t\tswitch (mode) {\r\n\t\t\t\t\t\tcase EXISTENCE:\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\tcase ENTRY:\r\n\t\t\t\t\t\t\treturn entry;\r\n\t\t\t\t\t\tcase ENTRY_INDEX_AND_VALUE:\r\n\t\t\t\t\t\t\treturn [ i, entry[1] ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t}\r\n\r\n\tfunction createBucketLister(entryProperty) {\r\n\t\treturn function(aggregatedArr) {\r\n\t\t\tvar startIndex = aggregatedArr.length;\r\n\t\t\tfor (var i = 0, len = this.entries.length; i < len; ++i) {\r\n\t\t\t\taggregatedArr[startIndex + i] = this.entries[i][entryProperty];\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tBucket.prototype = {\r\n\t\tgetEqualityFunction: function(searchValue) {\r\n\t\t\treturn (typeof searchValue.equals == FUNCTION) ? equals_fixedValueHasEquals : equals_fixedValueNoEquals;\r\n\t\t},\r\n\r\n\t\tgetEntryForKey: createBucketSearcher(ENTRY),\r\n\r\n\t\tgetEntryAndIndexForKey: createBucketSearcher(ENTRY_INDEX_AND_VALUE),\r\n\r\n\t\tremoveEntryForKey: function(key) {\r\n\t\t\tvar result = this.getEntryAndIndexForKey(key);\r\n\t\t\tif (result) {\r\n\t\t\t\tarrayRemoveAt(this.entries, result[0]);\r\n\t\t\t\treturn result[1];\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\taddEntry: function(key, value) {\r\n\t\t\tthis.entries[this.entries.length] = [key, value];\r\n\t\t},\r\n\r\n\t\tkeys: createBucketLister(0),\r\n\r\n\t\tvalues: createBucketLister(1),\r\n\r\n\t\tgetEntries: function(entries) {\r\n\t\t\tvar startIndex = entries.length;\r\n\t\t\tfor (var i = 0, len = this.entries.length; i < len; ++i) {\r\n\t\t\t\t// Clone the entry stored in the bucket before adding to array\r\n\t\t\t\tentries[startIndex + i] = this.entries[i].slice(0);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcontainsKey: createBucketSearcher(EXISTENCE),\r\n\r\n\t\tcontainsValue: function(value) {\r\n\t\t\tvar i = this.entries.length;\r\n\t\t\twhile (i--) {\r\n\t\t\t\tif ( value === this.entries[i][1] ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\t/*----------------------------------------------------------------------------------------------------------------*/\r\n\r\n\t// Supporting functions for searching hashtable buckets\r\n\r\n\tfunction searchBuckets(buckets, hash) {\r\n\t\tvar i = buckets.length, bucket;\r\n\t\twhile (i--) {\r\n\t\t\tbucket = buckets[i];\r\n\t\t\tif (hash === bucket[0]) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction getBucketForHash(bucketsByHash, hash) {\r\n\t\tvar bucket = bucketsByHash[hash];\r\n\r\n\t\t// Check that this is a genuine bucket and not something inherited from the bucketsByHash's prototype\r\n\t\treturn ( bucket && (bucket instanceof Bucket) ) ? bucket : null;\r\n\t}\r\n\r\n\t/*----------------------------------------------------------------------------------------------------------------*/\r\n\r\n\tfunction Hashtable(hashingFunctionParam, equalityFunctionParam) {\r\n\t\tvar that = this;\r\n\t\tvar buckets = [];\r\n\t\tvar bucketsByHash = {};\r\n\r\n\t\tvar hashingFunction = (typeof hashingFunctionParam == FUNCTION) ? hashingFunctionParam : hashObject;\r\n\t\tvar equalityFunction = (typeof equalityFunctionParam == FUNCTION) ? equalityFunctionParam : null;\r\n\r\n\t\tthis.put = function(key, value) {\r\n\t\t\tcheckKey(key);\r\n\t\t\tcheckValue(value);\r\n\t\t\tvar hash = hashingFunction(key), bucket, bucketEntry, oldValue = null;\r\n\r\n\t\t\t// Check if a bucket exists for the bucket key\r\n\t\t\tbucket = getBucketForHash(bucketsByHash, hash);\r\n\t\t\tif (bucket) {\r\n\t\t\t\t// Check this bucket to see if it already contains this key\r\n\t\t\t\tbucketEntry = bucket.getEntryForKey(key);\r\n\t\t\t\tif (bucketEntry) {\r\n\t\t\t\t\t// This bucket entry is the current mapping of key to value, so replace old value and we're done.\r\n\t\t\t\t\toldValue = bucketEntry[1];\r\n\t\t\t\t\tbucketEntry[1] = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// The bucket does not contain an entry for this key, so add one\r\n\t\t\t\t\tbucket.addEntry(key, value);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// No bucket exists for the key, so create one and put our key/value mapping in\r\n\t\t\t\tbucket = new Bucket(hash, key, value, equalityFunction);\r\n\t\t\t\tbuckets[buckets.length] = bucket;\r\n\t\t\t\tbucketsByHash[hash] = bucket;\r\n\t\t\t}\r\n\t\t\treturn oldValue;\r\n\t\t};\r\n\r\n\t\tthis.get = function(key) {\r\n\t\t\tcheckKey(key);\r\n\r\n\t\t\tvar hash = hashingFunction(key);\r\n\r\n\t\t\t// Check if a bucket exists for the bucket key\r\n\t\t\tvar bucket = getBucketForHash(bucketsByHash, hash);\r\n\t\t\tif (bucket) {\r\n\t\t\t\t// Check this bucket to see if it contains this key\r\n\t\t\t\tvar bucketEntry = bucket.getEntryForKey(key);\r\n\t\t\t\tif (bucketEntry) {\r\n\t\t\t\t\t// This bucket entry is the current mapping of key to value, so return the value.\r\n\t\t\t\t\treturn bucketEntry[1];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\tthis.containsKey = function(key) {\r\n\t\t\tcheckKey(key);\r\n\t\t\tvar bucketKey = hashingFunction(key);\r\n\r\n\t\t\t// Check if a bucket exists for the bucket key\r\n\t\t\tvar bucket = getBucketForHash(bucketsByHash, bucketKey);\r\n\r\n\t\t\treturn bucket ? bucket.containsKey(key) : false;\r\n\t\t};\r\n\r\n\t\tthis.containsValue = function(value) {\r\n\t\t\tcheckValue(value);\r\n\t\t\tvar i = buckets.length;\r\n\t\t\twhile (i--) {\r\n\t\t\t\tif (buckets[i].containsValue(value)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tthis.clear = function() {\r\n\t\t\tbuckets.length = 0;\r\n\t\t\tbucketsByHash = {};\r\n\t\t};\r\n\r\n\t\tthis.isEmpty = function() {\r\n\t\t\treturn !buckets.length;\r\n\t\t};\r\n\r\n\t\tvar createBucketAggregator = function(bucketFuncName) {\r\n\t\t\treturn function() {\r\n\t\t\t\tvar aggregated = [], i = buckets.length;\r\n\t\t\t\twhile (i--) {\r\n\t\t\t\t\tbuckets[i][bucketFuncName](aggregated);\r\n\t\t\t\t}\r\n\t\t\t\treturn aggregated;\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tthis.keys = createBucketAggregator(\"keys\");\r\n\t\tthis.values = createBucketAggregator(\"values\");\r\n\t\tthis.entries = createBucketAggregator(\"getEntries\");\r\n\r\n\t\tthis.remove = function(key) {\r\n\t\t\tcheckKey(key);\r\n\r\n\t\t\tvar hash = hashingFunction(key), bucketIndex, oldValue = null;\r\n\r\n\t\t\t// Check if a bucket exists for the bucket key\r\n\t\t\tvar bucket = getBucketForHash(bucketsByHash, hash);\r\n\r\n\t\t\tif (bucket) {\r\n\t\t\t\t// Remove entry from this bucket for this key\r\n\t\t\t\toldValue = bucket.removeEntryForKey(key);\r\n\t\t\t\tif (oldValue !== null) {\r\n\t\t\t\t\t// Entry was removed, so check if bucket is empty\r\n\t\t\t\t\tif (!bucket.entries.length) {\r\n\t\t\t\t\t\t// Bucket is empty, so remove it from the bucket collections\r\n\t\t\t\t\t\tbucketIndex = searchBuckets(buckets, hash);\r\n\t\t\t\t\t\tarrayRemoveAt(buckets, bucketIndex);\r\n\t\t\t\t\t\tdelete bucketsByHash[hash];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn oldValue;\r\n\t\t};\r\n\r\n\t\tthis.size = function() {\r\n\t\t\tvar total = 0, i = buckets.length;\r\n\t\t\twhile (i--) {\r\n\t\t\t\ttotal += buckets[i].entries.length;\r\n\t\t\t}\r\n\t\t\treturn total;\r\n\t\t};\r\n\r\n\t\tthis.each = function(callback) {\r\n\t\t\tvar entries = that.entries(), i = entries.length, entry;\r\n\t\t\twhile (i--) {\r\n\t\t\t\tentry = entries[i];\r\n\t\t\t\tcallback(entry[0], entry[1]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.putAll = function(hashtable, conflictCallback) {\r\n\t\t\tvar entries = hashtable.entries();\r\n\t\t\tvar entry, key, value, thisValue, i = entries.length;\r\n\t\t\tvar hasConflictCallback = (typeof conflictCallback == FUNCTION);\r\n\t\t\twhile (i--) {\r\n\t\t\t\tentry = entries[i];\r\n\t\t\t\tkey = entry[0];\r\n\t\t\t\tvalue = entry[1];\r\n\r\n\t\t\t\t// Check for a conflict. The default behaviour is to overwrite the value for an existing key\r\n\t\t\t\tif ( hasConflictCallback && (thisValue = that.get(key)) ) {\r\n\t\t\t\t\tvalue = conflictCallback(key, thisValue, value);\r\n\t\t\t\t}\r\n\t\t\t\tthat.put(key, value);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.clone = function() {\r\n\t\t\tvar clone = new Hashtable(hashingFunctionParam, equalityFunctionParam);\r\n\t\t\tclone.putAll(that);\r\n\t\t\treturn clone;\r\n\t\t};\r\n\t}\r\n\r\n\treturn Hashtable;\r\n})();\r\n\r\nmodule.exports = Hashtable;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// events.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4086fb8da0cb079d25cc","import Hashtable from 'jshashtable';\n\nfunction is_array(pVar) {\n    return (Object.prototype.toString.call(pVar) == \"[object Array]\");\n}\n\nclass Events {\n\n    constructor() {\n\n        this.gateway = new Hashtable();\n        this.hashes = new Hashtable();\n        this.once = [];\n\n        this.defaultPriority = 0;\n\n    }\n\n    /**\n     * Register for a specific Event. A third optional param can be send that represents the priority.\n     *\n     * @param pLabel string\n     * @param pFunction function\n     */\n    register(pLabel, pFunction) {\n\n        //priority\n        let priority = this.defaultPriority;\n\n        if (arguments.length > 2) {\n            priority = arguments[2];\n        }\n\n        if (is_array(pLabel)) {\n\n            let hashes = [];\n\n            pLabel.each((aLabel) => {\n                hashes = hashes.concat(this.register(aLabel, pFunction, priority));\n            });\n\n            return hashes;\n\n        } else {\n\n            //init givent type\n            let singleHash = (Math.random() + 1).toString(36).substring(7);\n\n            if (this.gateway.get(pLabel) == undefined) {\n                this.gateway.put(pLabel, new Hashtable());\n            }\n\n            let typeHash = this.gateway.get(pLabel);\n\n            //check priority\n            if (typeHash.get(priority) == undefined) {\n                typeHash.put(priority, []);\n            }\n\n            let priorityArray = typeHash.get(priority);\n            priorityArray.push(singleHash);\n            this.hashes.put(singleHash, pFunction);\n\n            return singleHash;\n\n        }\n\n    }\n\n    /**\n     * Like register, but will be removed after a single execution\n     * \n     * @param pLabel\n     * @param pFunction\n     */\n    register_once(pLabel, pFunction) {\n\n        this.once.push(this.register(pLabel, pFunction, arguments[2] || this.defaultPriority));\n\n    }\n\n    /**\n     * Remove callback from event list\n     * \n     * @param pLabel\n     * @param pHash\n     * @returns {boolean}\n     */\n    unregister(pLabel, pHash) {\n\n        if (this.gateway.get(pLabel) != undefined) {\n\n            let priorityHash = this.gateway.get(pLabel);\n            let priorityKeys = priorityHash.keys();\n\n            for (let I = 0; I < priorityKeys.length; I++) {\n\n                let priorityArray = priorityHash.get(priorityKeys[I]);\n\n                for (let Y = 0; Y < priorityArray.length; Y++) {\n\n                    if (priorityArray[Y] == pHash) {\n\n                        priorityArray.splice(Y, 1);\n\n                        this.hashes.remove(pHash);\n\n                        return true;\n                    }\n                }\n\n            }\n\n        }\n\n        return false;\n    }\n\n    /**\n     * Fire an event. The gateway searches for listeners and processes the callback with the payload\n     *\n     * @param pLabel string\n     * @param pMessage object\n     */\n    fire(pLabel, pMessage = {}) {\n\n        if (this.gateway.get(pLabel) != undefined) {\n\n            let priorityHash = this.gateway.get(pLabel);\n            let priorityKeys = priorityHash.keys();\n\n            priorityKeys.sort((a, b) => {\n                return b - a\n            });\n\n            let skipType = false;\n\n            for (let I = 0; I < priorityKeys.length; I++) {\n\n                let priorityArray = priorityHash.get(priorityKeys[I]);\n\n                for (let Y = 0; Y < priorityArray.length; Y++) {\n\n                    let hashValue = priorityArray[Y];\n                    let returnValue = this.hashes.get(hashValue)(pMessage, (aNewMessage) => {\n                        pMessage = aNewMessage;\n                    });\n\n                    if (this.once.indexOf(hashValue) > -1) {\n                        this.unregister(pLabel, hashValue);\n                    }\n\n                    // if return value is negative, we stop here!\n                    if (!returnValue) {\n                        __DEV__ && console.log('Return value break (return not true) for event (' + pLabel + ')');\n                        skipType = true;\n                        break;\n                    }\n                }\n\n                if (skipType) {\n                    break;\n                }\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Return array of registered events\n     */\n    showEvents() {\n\n        this.gateway.each((eventObject) => {\n\n            let eventLabel = eventObject.key;\n            let priorityList = eventObject.value;\n\n            priorityList.each((priorityObject) => {\n\n                let priorityKey = priorityObject.key;\n                let priority_hashes = priorityObject.value;\n\n                if (priority_hashes.length > 0) {\n\n                    console.log(eventLabel + '(' + priority_hashes.length + ')');\n\n                    priority_hashes.each(function (hashObject) {\n                        console.log('#' + hashObject)\n                    });\n\n                    console.log('');\n\n                }\n            });\n\n        });\n\n    }\n\n}\n\nmodule.exports = new Events();\n\n\n// WEBPACK FOOTER //\n// ./source/Events.js","/**\r\n * Copyright 2010 Tim Down.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * jshashtable\r\n *\r\n * jshashtable is a JavaScript implementation of a hash table. It creates a single constructor function called Hashtable\r\n * in the global scope.\r\n *\r\n * Author: Tim Down <tim@timdown.co.uk>\r\n * Version: 2.1\r\n * Build date: 21 March 2010\r\n * Website: http://www.timdown.co.uk/jshashtable\r\n */\r\n\r\nvar Hashtable = (function() {\r\n\tvar FUNCTION = \"function\";\r\n\r\n\tvar arrayRemoveAt = (typeof Array.prototype.splice == FUNCTION) ?\r\n\t\tfunction(arr, idx) {\r\n\t\t\tarr.splice(idx, 1);\r\n\t\t} :\r\n\r\n\t\tfunction(arr, idx) {\r\n\t\t\tvar itemsAfterDeleted, i, len;\r\n\t\t\tif (idx === arr.length - 1) {\r\n\t\t\t\tarr.length = idx;\r\n\t\t\t} else {\r\n\t\t\t\titemsAfterDeleted = arr.slice(idx + 1);\r\n\t\t\t\tarr.length = idx;\r\n\t\t\t\tfor (i = 0, len = itemsAfterDeleted.length; i < len; ++i) {\r\n\t\t\t\t\tarr[idx + i] = itemsAfterDeleted[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\tfunction hashObject(obj) {\r\n\t\tvar hashCode;\r\n\t\tif (typeof obj == \"string\") {\r\n\t\t\treturn obj;\r\n\t\t} else if (typeof obj.hashCode == FUNCTION) {\r\n\t\t\t// Check the hashCode method really has returned a string\r\n\t\t\thashCode = obj.hashCode();\r\n\t\t\treturn (typeof hashCode == \"string\") ? hashCode : hashObject(hashCode);\r\n\t\t} else if (typeof obj.toString == FUNCTION) {\r\n\t\t\treturn obj.toString();\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\treturn String(obj);\r\n\t\t\t} catch (ex) {\r\n\t\t\t\t// For host objects (such as ActiveObjects in IE) that have no toString() method and throw an error when\r\n\t\t\t\t// passed to String()\r\n\t\t\t\treturn Object.prototype.toString.call(obj);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction equals_fixedValueHasEquals(fixedValue, variableValue) {\r\n\t\treturn fixedValue.equals(variableValue);\r\n\t}\r\n\r\n\tfunction equals_fixedValueNoEquals(fixedValue, variableValue) {\r\n\t\treturn (typeof variableValue.equals == FUNCTION) ?\r\n\t\t\t   variableValue.equals(fixedValue) : (fixedValue === variableValue);\r\n\t}\r\n\r\n\tfunction createKeyValCheck(kvStr) {\r\n\t\treturn function(kv) {\r\n\t\t\tif (kv === null) {\r\n\t\t\t\tthrow new Error(\"null is not a valid \" + kvStr);\r\n\t\t\t} else if (typeof kv == \"undefined\") {\r\n\t\t\t\tthrow new Error(kvStr + \" must not be undefined\");\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tvar checkKey = createKeyValCheck(\"key\"), checkValue = createKeyValCheck(\"value\");\r\n\r\n\t/*----------------------------------------------------------------------------------------------------------------*/\r\n\r\n\tfunction Bucket(hash, firstKey, firstValue, equalityFunction) {\r\n        this[0] = hash;\r\n\t\tthis.entries = [];\r\n\t\tthis.addEntry(firstKey, firstValue);\r\n\r\n\t\tif (equalityFunction !== null) {\r\n\t\t\tthis.getEqualityFunction = function() {\r\n\t\t\t\treturn equalityFunction;\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tvar EXISTENCE = 0, ENTRY = 1, ENTRY_INDEX_AND_VALUE = 2;\r\n\r\n\tfunction createBucketSearcher(mode) {\r\n\t\treturn function(key) {\r\n\t\t\tvar i = this.entries.length, entry, equals = this.getEqualityFunction(key);\r\n\t\t\twhile (i--) {\r\n\t\t\t\tentry = this.entries[i];\r\n\t\t\t\tif ( equals(key, entry[0]) ) {\r\n\t\t\t\t\tswitch (mode) {\r\n\t\t\t\t\t\tcase EXISTENCE:\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\tcase ENTRY:\r\n\t\t\t\t\t\t\treturn entry;\r\n\t\t\t\t\t\tcase ENTRY_INDEX_AND_VALUE:\r\n\t\t\t\t\t\t\treturn [ i, entry[1] ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t}\r\n\r\n\tfunction createBucketLister(entryProperty) {\r\n\t\treturn function(aggregatedArr) {\r\n\t\t\tvar startIndex = aggregatedArr.length;\r\n\t\t\tfor (var i = 0, len = this.entries.length; i < len; ++i) {\r\n\t\t\t\taggregatedArr[startIndex + i] = this.entries[i][entryProperty];\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tBucket.prototype = {\r\n\t\tgetEqualityFunction: function(searchValue) {\r\n\t\t\treturn (typeof searchValue.equals == FUNCTION) ? equals_fixedValueHasEquals : equals_fixedValueNoEquals;\r\n\t\t},\r\n\r\n\t\tgetEntryForKey: createBucketSearcher(ENTRY),\r\n\r\n\t\tgetEntryAndIndexForKey: createBucketSearcher(ENTRY_INDEX_AND_VALUE),\r\n\r\n\t\tremoveEntryForKey: function(key) {\r\n\t\t\tvar result = this.getEntryAndIndexForKey(key);\r\n\t\t\tif (result) {\r\n\t\t\t\tarrayRemoveAt(this.entries, result[0]);\r\n\t\t\t\treturn result[1];\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\taddEntry: function(key, value) {\r\n\t\t\tthis.entries[this.entries.length] = [key, value];\r\n\t\t},\r\n\r\n\t\tkeys: createBucketLister(0),\r\n\r\n\t\tvalues: createBucketLister(1),\r\n\r\n\t\tgetEntries: function(entries) {\r\n\t\t\tvar startIndex = entries.length;\r\n\t\t\tfor (var i = 0, len = this.entries.length; i < len; ++i) {\r\n\t\t\t\t// Clone the entry stored in the bucket before adding to array\r\n\t\t\t\tentries[startIndex + i] = this.entries[i].slice(0);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcontainsKey: createBucketSearcher(EXISTENCE),\r\n\r\n\t\tcontainsValue: function(value) {\r\n\t\t\tvar i = this.entries.length;\r\n\t\t\twhile (i--) {\r\n\t\t\t\tif ( value === this.entries[i][1] ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\t/*----------------------------------------------------------------------------------------------------------------*/\r\n\r\n\t// Supporting functions for searching hashtable buckets\r\n\r\n\tfunction searchBuckets(buckets, hash) {\r\n\t\tvar i = buckets.length, bucket;\r\n\t\twhile (i--) {\r\n\t\t\tbucket = buckets[i];\r\n\t\t\tif (hash === bucket[0]) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction getBucketForHash(bucketsByHash, hash) {\r\n\t\tvar bucket = bucketsByHash[hash];\r\n\r\n\t\t// Check that this is a genuine bucket and not something inherited from the bucketsByHash's prototype\r\n\t\treturn ( bucket && (bucket instanceof Bucket) ) ? bucket : null;\r\n\t}\r\n\r\n\t/*----------------------------------------------------------------------------------------------------------------*/\r\n\r\n\tfunction Hashtable(hashingFunctionParam, equalityFunctionParam) {\r\n\t\tvar that = this;\r\n\t\tvar buckets = [];\r\n\t\tvar bucketsByHash = {};\r\n\r\n\t\tvar hashingFunction = (typeof hashingFunctionParam == FUNCTION) ? hashingFunctionParam : hashObject;\r\n\t\tvar equalityFunction = (typeof equalityFunctionParam == FUNCTION) ? equalityFunctionParam : null;\r\n\r\n\t\tthis.put = function(key, value) {\r\n\t\t\tcheckKey(key);\r\n\t\t\tcheckValue(value);\r\n\t\t\tvar hash = hashingFunction(key), bucket, bucketEntry, oldValue = null;\r\n\r\n\t\t\t// Check if a bucket exists for the bucket key\r\n\t\t\tbucket = getBucketForHash(bucketsByHash, hash);\r\n\t\t\tif (bucket) {\r\n\t\t\t\t// Check this bucket to see if it already contains this key\r\n\t\t\t\tbucketEntry = bucket.getEntryForKey(key);\r\n\t\t\t\tif (bucketEntry) {\r\n\t\t\t\t\t// This bucket entry is the current mapping of key to value, so replace old value and we're done.\r\n\t\t\t\t\toldValue = bucketEntry[1];\r\n\t\t\t\t\tbucketEntry[1] = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// The bucket does not contain an entry for this key, so add one\r\n\t\t\t\t\tbucket.addEntry(key, value);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// No bucket exists for the key, so create one and put our key/value mapping in\r\n\t\t\t\tbucket = new Bucket(hash, key, value, equalityFunction);\r\n\t\t\t\tbuckets[buckets.length] = bucket;\r\n\t\t\t\tbucketsByHash[hash] = bucket;\r\n\t\t\t}\r\n\t\t\treturn oldValue;\r\n\t\t};\r\n\r\n\t\tthis.get = function(key) {\r\n\t\t\tcheckKey(key);\r\n\r\n\t\t\tvar hash = hashingFunction(key);\r\n\r\n\t\t\t// Check if a bucket exists for the bucket key\r\n\t\t\tvar bucket = getBucketForHash(bucketsByHash, hash);\r\n\t\t\tif (bucket) {\r\n\t\t\t\t// Check this bucket to see if it contains this key\r\n\t\t\t\tvar bucketEntry = bucket.getEntryForKey(key);\r\n\t\t\t\tif (bucketEntry) {\r\n\t\t\t\t\t// This bucket entry is the current mapping of key to value, so return the value.\r\n\t\t\t\t\treturn bucketEntry[1];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\tthis.containsKey = function(key) {\r\n\t\t\tcheckKey(key);\r\n\t\t\tvar bucketKey = hashingFunction(key);\r\n\r\n\t\t\t// Check if a bucket exists for the bucket key\r\n\t\t\tvar bucket = getBucketForHash(bucketsByHash, bucketKey);\r\n\r\n\t\t\treturn bucket ? bucket.containsKey(key) : false;\r\n\t\t};\r\n\r\n\t\tthis.containsValue = function(value) {\r\n\t\t\tcheckValue(value);\r\n\t\t\tvar i = buckets.length;\r\n\t\t\twhile (i--) {\r\n\t\t\t\tif (buckets[i].containsValue(value)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tthis.clear = function() {\r\n\t\t\tbuckets.length = 0;\r\n\t\t\tbucketsByHash = {};\r\n\t\t};\r\n\r\n\t\tthis.isEmpty = function() {\r\n\t\t\treturn !buckets.length;\r\n\t\t};\r\n\r\n\t\tvar createBucketAggregator = function(bucketFuncName) {\r\n\t\t\treturn function() {\r\n\t\t\t\tvar aggregated = [], i = buckets.length;\r\n\t\t\t\twhile (i--) {\r\n\t\t\t\t\tbuckets[i][bucketFuncName](aggregated);\r\n\t\t\t\t}\r\n\t\t\t\treturn aggregated;\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tthis.keys = createBucketAggregator(\"keys\");\r\n\t\tthis.values = createBucketAggregator(\"values\");\r\n\t\tthis.entries = createBucketAggregator(\"getEntries\");\r\n\r\n\t\tthis.remove = function(key) {\r\n\t\t\tcheckKey(key);\r\n\r\n\t\t\tvar hash = hashingFunction(key), bucketIndex, oldValue = null;\r\n\r\n\t\t\t// Check if a bucket exists for the bucket key\r\n\t\t\tvar bucket = getBucketForHash(bucketsByHash, hash);\r\n\r\n\t\t\tif (bucket) {\r\n\t\t\t\t// Remove entry from this bucket for this key\r\n\t\t\t\toldValue = bucket.removeEntryForKey(key);\r\n\t\t\t\tif (oldValue !== null) {\r\n\t\t\t\t\t// Entry was removed, so check if bucket is empty\r\n\t\t\t\t\tif (!bucket.entries.length) {\r\n\t\t\t\t\t\t// Bucket is empty, so remove it from the bucket collections\r\n\t\t\t\t\t\tbucketIndex = searchBuckets(buckets, hash);\r\n\t\t\t\t\t\tarrayRemoveAt(buckets, bucketIndex);\r\n\t\t\t\t\t\tdelete bucketsByHash[hash];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn oldValue;\r\n\t\t};\r\n\r\n\t\tthis.size = function() {\r\n\t\t\tvar total = 0, i = buckets.length;\r\n\t\t\twhile (i--) {\r\n\t\t\t\ttotal += buckets[i].entries.length;\r\n\t\t\t}\r\n\t\t\treturn total;\r\n\t\t};\r\n\r\n\t\tthis.each = function(callback) {\r\n\t\t\tvar entries = that.entries(), i = entries.length, entry;\r\n\t\t\twhile (i--) {\r\n\t\t\t\tentry = entries[i];\r\n\t\t\t\tcallback(entry[0], entry[1]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.putAll = function(hashtable, conflictCallback) {\r\n\t\t\tvar entries = hashtable.entries();\r\n\t\t\tvar entry, key, value, thisValue, i = entries.length;\r\n\t\t\tvar hasConflictCallback = (typeof conflictCallback == FUNCTION);\r\n\t\t\twhile (i--) {\r\n\t\t\t\tentry = entries[i];\r\n\t\t\t\tkey = entry[0];\r\n\t\t\t\tvalue = entry[1];\r\n\r\n\t\t\t\t// Check for a conflict. The default behaviour is to overwrite the value for an existing key\r\n\t\t\t\tif ( hasConflictCallback && (thisValue = that.get(key)) ) {\r\n\t\t\t\t\tvalue = conflictCallback(key, thisValue, value);\r\n\t\t\t\t}\r\n\t\t\t\tthat.put(key, value);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.clone = function() {\r\n\t\t\tvar clone = new Hashtable(hashingFunctionParam, equalityFunctionParam);\r\n\t\t\tclone.putAll(that);\r\n\t\t\treturn clone;\r\n\t\t};\r\n\t}\r\n\r\n\treturn Hashtable;\r\n})();\r\n\r\nmodule.exports = Hashtable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jshashtable/jshashtable.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}